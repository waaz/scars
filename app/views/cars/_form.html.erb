<%= form_for(@car, :html => {:id => 'newCarForm'}) do |f| %>
  <% if @car.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@car.errors.count, "error") %> prohibited this car from being saved:</h2>

      <ul>
      <% @car.errors.full_messages.each do |msg| %>
        <li><%= msg %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="field">
    <%= f.label :reg %><br />
    <%= f.text_field :reg %>
  </div>
  <div class="field">
    <%= f.label :model %><br />
    <%= f.text_field :model %>
  </div>
  <div class="field">
    <%= f.label :car_class_id, "Car class:" %>
    <%= f.collection_select(:car_class_id, CarClass.all, :id, :car_class_name) %>
  </div>
  <div class="field">
    <%= f.label :status %><br />
    <%= f.text_field :status %>
  </div>
  <div class="actions">
    <%= f.submit %>
  </div>
<% end %>

<script language="JavaScript" type="text/javascript">

    var frmvalidator  = new Validator("newCarForm");
    frmvalidator.EnableMsgsTogether();
    frmvalidator.EnableFocusOnError(false);
    frmvalidator.addValidation("car_reg","req","Missing \"Car registration number\"");
    frmvalidator.addValidation("car_model","req","Missing \"Car model\"");
    frmvalidator.addValidation("car_status","req","Missing \"Car status\"");

    frmvalidator.addValidation("car_reg","alnum_s","Car registration number allows only alphabetic, numeric and space characters ");
    frmvalidator.addValidation("car_model","alnum_s","Car model allows only alphabetic, numeric and space characters ");

</script>